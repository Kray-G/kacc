using Process;

/**
    Setup values
*/
const isWindows = System.PLATFORM.endsWith("-WIN");
const pkglibpath = __FILE__.replace("\\", "/").replace(new Regex("^" + $pkgpath.replace("\\", "/") + "/*"), "");
const [ pkgname, version ] = pkglibpath.split("/");
const pkgpath = $pkgpath.replace("\\", "/") / pkgname / version;
const PARSER_KMYACC = isWindows ? "bin/exec/kmyacc.exe" : "bin/exec/kmyacc";
const PARSER_GENEERATOR = pkgpath / PARSER_KMYACC;
const PARSER_TEMPALTE = pkgpath / "etc/kmyacc.kx.parser";
var outfile = "parser.kx";
var infofile = "parser.output";

/**
    Analyze options
*/
$$.shift();
var opt, command = [ PARSER_GENEERATOR, "-m", PARSER_TEMPALTE ];
while (opt = System.getopt($$, "dvltp:o:d:")) {
    switch (opt.type) {
    case 'v':
    case 'l':
    case 't':
        command.push("-" + opt.type);
        break;
    case 'p':
        command.push("-" + opt.type);
        break;
    case 'o':
        outfile = opt.arg;
        break;
    case 'd':
        infofile = opt.arg;
        break;
    case '-': {
        var file = isWindows ? opt.arg.replace("\\", "/") : opt.arg;
        command.push(file);
        break;
    }
    default:
        break;
    }
}

/**
    Generate a parser
*/
# System.println(command);
var p1 = new Process(command, { out: $stdout, err: $stderr }).run();
p1.wait();

/**
    Output files
*/
if (File.exists("y.tab.c")) {
    File.remove(outfile);
    File.rename("y.tab.c", outfile);
}
if (File.exists("y.output")) {
    File.remove(infofile);
    File.rename("y.output", infofile);
}
